name: Build and Release Python Executable

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: write
  issues: write

env:
  CARGO_TERM_COLOR: always
  EXECUTABLE_NAME: "hack_the_planet"

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.new_tag }}
      should_run: ${{ steps.determine_run.outputs.should_run }}
      ZIP_NAME: ${{ env.EXECUTABLE_NAME }}_${{ steps.get_version.outputs.new_tag }}_macos.zip
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Bump version and tag
        id: get_version
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: none
          TAG_PREFIX: ""
          WITH_V: true
          RELEASE_BRANCHES: main
          INITIAL_VERSION: 1.0.0

      - name: Determine if workflow should run
        id: determine_run
        run: |
          if [[ ${{ steps.get_version.outputs.new_tag }} != "" ]]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi
          echo ${{ steps.get_version.outputs.new_tag }}
          echo ${{ steps.get_version.outputs.part }}
          echo ${{ steps.get_version.outputs.tag }}

  build-executable:
    needs: [check-version]
    if: needs.check-version.outputs.should_run == 'true'
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Executable with PyInstaller
        uses: sayyid5416/pyinstaller@v1
        with:
          python_ver: "3.12"
          spec: "main.py"
          requirements: "requirements.txt"
          upload_exe_with_name: ${{ env.EXECUTABLE_NAME }}
          options: --onefile, --name ${{ env.EXECUTABLE_NAME }}, --icon hack_the_planet.icns, --console, --add-data "./animation_images_json/*.json:./animation_images_json/", --add-data "./sounds/*.wav:./sounds/", --add-data "./mission_messages/*.json:./mission_messages/"

      - name: Zip the executable
        run: |
          cd dist
          zip -r ${{ needs.check-version.outputs.ZIP_NAME }} ${{ env.EXECUTABLE_NAME }}
      - name: Upload executable as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.EXECUTABLE_NAME }}_${{ needs.check-version.outputs.version }}
          path: dist/${{ needs.check-version.outputs.ZIP_NAME }}

  create-release:
    needs: [check-version, build-executable]
    if: needs.check-version.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download executable artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.EXECUTABLE_NAME }}_${{ needs.check-version.outputs.version }}
          path: ./dist/

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: ./dist/${{ needs.check-version.outputs.ZIP_NAME }}
          tag_name: ${{ needs.check-version.outputs.version }}
          name: Release ${{ needs.check-version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
